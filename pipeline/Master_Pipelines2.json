{
	"name": "Master_Pipelines2",
	"properties": {
		"activities": [
			{
				"name": "Lookup2",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"dataset": {
						"referenceName": "DelimitedText21",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Lookup2",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Lookup2').output.value",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "If Condition1",
							"type": "IfCondition",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@greater(int(item().Active_Inactive),0)",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "Set variable4",
										"type": "SetVariable",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"variableName": "Entity",
											"value": {
												"value": "@item().Entity",
												"type": "Expression"
											}
										}
									},
									{
										"name": "Lookup3",
										"type": "Lookup",
										"dependsOn": [
											{
												"activity": "Set variable6",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "SqlServerSource",
												"sqlReaderQuery": {
													"value": "\nDECLARE @s VARCHAR(MAX) \n\nDECLARE @tablename VARCHAR(500) ='@{concat(item().Entity,pipeline().parameters.TableNames)}'\n\nSELECT @s = ISNULL(@s+', ','') + '[' + c.name + ']' + ' as ['+replace(c.name,' ','')+'] ' \n\nFROM sys.all_columns c join sys.tables t \n\nON c.object_id = t.object_id \n\nWHERE t.name = @tablename \n\nselect 'select ' + REPLACE(REPLACE( @s, '(', ''),')','') + ',''@{item().Entity_Code}'' as Site_Code from [' + @tablename +']' as Query",
													"type": "Expression"
												},
												"queryTimeout": "02:00:00",
												"partitionOption": "None"
											},
											"dataset": {
												"referenceName": "SqlServerTable18",
												"type": "DatasetReference"
											}
										}
									},
									{
										"name": "Append variable1",
										"type": "AppendVariable",
										"dependsOn": [
											{
												"activity": "Set variable7",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"userProperties": [],
										"typeProperties": {
											"variableName": "Final_Query",
											"value": {
												"value": "@variables('Lookup_Output')",
												"type": "Expression"
											}
										}
									},
									{
										"name": "Set variable6",
										"type": "SetVariable",
										"dependsOn": [
											{
												"activity": "Set variable4",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"userProperties": [],
										"typeProperties": {
											"variableName": "testing",
											"value": {
												"value": "@{concat(item().Entity,pipeline().parameters.TableNames)}",
												"type": "Expression"
											}
										}
									},
									{
										"name": "Set variable7",
										"type": "SetVariable",
										"dependsOn": [
											{
												"activity": "Lookup3",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"userProperties": [],
										"typeProperties": {
											"variableName": "Lookup_Output",
											"value": {
												"value": "@activity('Lookup3').output.firstRow.Query",
												"type": "Expression"
											}
										}
									}
								]
							}
						}
					]
				}
			},
			{
				"name": "Set variable8",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "ForEach1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "Final_Query1",
					"value": {
						"value": "@join(variables('Final_Query'),'UNION ALL' )",
						"type": "Expression"
					}
				}
			}
		],
		"parameters": {
			"TableNames": {
				"type": "string",
				"defaultValue": "Location"
			}
		},
		"variables": {
			"Table": {
				"type": "String"
			},
			"Columns": {
				"type": "String"
			},
			"Entity": {
				"type": "String"
			},
			"Final_Query": {
				"type": "Array",
				"defaultValue": []
			},
			"Final_Query1": {
				"type": "String"
			},
			"testing": {
				"type": "String"
			},
			"Lookup_Output": {
				"type": "String"
			},
			"testquery": {
				"type": "Array"
			}
		},
		"folder": {
			"name": "Aaryan_Pipelines"
		},
		"annotations": []
	}
}
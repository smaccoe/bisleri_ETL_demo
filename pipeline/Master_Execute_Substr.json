{
	"name": "Master_Execute_Substr",
	"properties": {
		"activities": [
			{
				"name": "Lookup2",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"dataset": {
						"referenceName": "DelimitedText21",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Filter1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Filter1').output.value",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "Lookup3",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SqlServerSource",
									"sqlReaderQuery": {
										"value": "DECLARE @s VARCHAR(MAX) \n\nDECLARE @tablename VARCHAR(500) ='@{concat(item().Entity,pipeline().parameters.TableNames)}'\n\nSELECT @s = ISNULL(@s+', ','') + '[' + c.name + ']' + ' as ['+replace(c.name,' ','')+'] ' \n\nFROM sys.all_columns c join sys.tables t \n\nON c.object_id = t.object_id \n\nWHERE t.name = @tablename \n\nselect 'select ' + REPLACE(REPLACE( @s, '(', ''),')','') + ',''@{item().Entity_Code}'' as site_code from [' + @tablename +'] UNION ALL ' as Query",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "SqlServerTable18",
									"type": "DatasetReference"
								}
							}
						},
						{
							"name": "FinalVar",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Lookup3",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "FinalVar",
								"value": {
									"value": "@{concat(variables('IntermediateVar'),activity('Lookup3').output.firstRow.Query)}",
									"type": "Expression"
								}
							}
						},
						{
							"name": "IntermediateVar",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "FinalVar",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "IntermediateVar",
								"value": {
									"value": "@variables('FinalVar')",
									"type": "Expression"
								}
							}
						}
					]
				}
			},
			{
				"name": "Set variable8",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "ForEach1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "Final_Query1",
					"value": {
						"value": "@substring(variables('FinalVar'),0,sub(length(variables('FinalVar')),11))",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Copy data1",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Set variable8",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": {
							"value": "@variables('Final_Query1')",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "ParquetSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "ParquetWriteSettings"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "SqlServerTable18",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "Parquet6",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Filter1",
				"type": "Filter",
				"dependsOn": [
					{
						"activity": "Lookup2",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Lookup2').output.value",
						"type": "Expression"
					},
					"condition": {
						"value": "@equals(item().Active_Inactive,'1')",
						"type": "Expression"
					}
				}
			}
		],
		"parameters": {
			"TableNames": {
				"type": "string",
				"defaultValue": "Location"
			}
		},
		"variables": {
			"Table": {
				"type": "String"
			},
			"Columns": {
				"type": "String"
			},
			"Entity": {
				"type": "String"
			},
			"Final_Query": {
				"type": "Array",
				"defaultValue": []
			},
			"Final_Query1": {
				"type": "String"
			},
			"EntityTable": {
				"type": "String"
			},
			"Lookup_Output": {
				"type": "String"
			},
			"testquery": {
				"type": "Array"
			},
			"CurrentItem": {
				"type": "String"
			},
			"LastItem": {
				"type": "String"
			},
			"EntityCode": {
				"type": "String"
			},
			"IntermediateVar": {
				"type": "String"
			},
			"FinalVar": {
				"type": "String"
			},
			"LastOutputVar": {
				"type": "String"
			},
			"ReturnQuery": {
				"type": "String"
			},
			"ReturnStr": {
				"type": "String"
			}
		},
		"folder": {
			"name": "Aaryan_Pipelines"
		},
		"annotations": []
	}
}
{
	"name": "Stage2_Sales_Cr_Memo_Line_DF",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Sales_Cr_Memo_Line",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "DataCleaning"
				}
			],
			"scriptLines": [
				"parameters{",
				"     Container_Name as string ('curated-data'),",
				"     Folder_Name as string ('Sales Cr_Memo Line')",
				"}",
				"source(output(",
				"          SR_DocNo as string,",
				"          RRCustomer_No as string,",
				"          RType as string,",
				"          {Line No_} as string,",
				"          RItemCat as string,",
				"          RITEMNO as string,",
				"          RFreeSupply as string,",
				"          RSchemeReason as string,",
				"          RTUOM as string,",
				"          RDiscount_Structure_Amount as string,",
				"          {Unit of Measure} as string,",
				"          RDIS_Struct_Code as string,",
				"          RFat_Catagory as string,",
				"          RAmountToCustomer as string,",
				"          RAmount as string,",
				"          RTaxAmount as string,",
				"          RTaxAreaCode as string,",
				"          RExciseAmount as string,",
				"          ReturnQTY as string,",
				"          ReturnQTYBASE as string,",
				"          ReturnQTYUOM as string,",
				"          RUnitPrice as string,",
				"          RRateDiff_ItemNo as string,",
				"          RDescription as string,",
				"          RChargesToCustomer as string,",
				"          R_RefCheckIn_SlipLineNo as string,",
				"          R_RefCheckIn_SlipNo as string,",
				"          {Return Reason Code} as string,",
				"          {Last Modified On} as string,",
				"          CRL_Key as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source1 derive(SR_DocNo = iifNull(SR_DocNo, toString(null())),",
				"          RRCustomer_No = iifNull(RRCustomer_No, toString(null())),",
				"          RType = toInteger(RType),",
				"          {Line No_} = toInteger({Line No_}),",
				"          RItemCat = iifNull(RItemCat, toString(null())),",
				"          RITEMNO = iifNull(RITEMNO, toString(null())),",
				"          RFreeSupply = toInteger(RFreeSupply),",
				"          RSchemeReason = iifNull(RSchemeReason, toString(null())),",
				"          RTUOM = iifNull(RTUOM, toString(null())),",
				"          RDiscount_Structure_Amount = toInteger(RDiscount_Structure_Amount),",
				"          {Unit of Measure} = iifNull({Unit of Measure}, toString(null())),",
				"          RDIS_Struct_Code = iifNull(RDIS_Struct_Code, toString(null())),",
				"          RFat_Catagory = toInteger(RFat_Catagory),",
				"          RAmountToCustomer = toDecimal(RAmountToCustomer),",
				"          RAmount = toDecimal(RAmount),",
				"          RTaxAmount = toInteger(RTaxAmount),",
				"          RTaxAreaCode = iifNull(RTaxAreaCode, toString(null())),",
				"          RExciseAmount = toInteger(RExciseAmount),",
				"          ReturnQTY = toDecimal(ReturnQTY),",
				"          ReturnQTYBASE = toDecimal(ReturnQTYBASE),",
				"          ReturnQTYUOM = toDecimal(ReturnQTYUOM),",
				"          RUnitPrice = toDecimal(RUnitPrice),",
				"          RRateDiff_ItemNo = iifNull(RRateDiff_ItemNo, toString(null())),",
				"          RDescription = iifNull(RDescription, toString(null())),",
				"          RChargesToCustomer = toInteger(RChargesToCustomer),",
				"          R_RefCheckIn_SlipLineNo = toInteger(R_RefCheckIn_SlipLineNo),",
				"          R_RefCheckIn_SlipNo = toInteger(iifNull({R_RefCheckIn_SlipNo}, toString(null()))),",
				"          {Return Reason Code} = iifNull({Return Reason Code}, toString(null())),",
				"          {Last Modified On} = toTimestamp({Last Modified On}, 'MM/dd/yyyy hh:mm:ss a', 'UTC'),",
				"          CRL_Key = iifNull(CRL_Key, toString(null()))) ~> DataCleaning"
			]
		}
	}
}
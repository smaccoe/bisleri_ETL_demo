{
	"name": "sales_shipment_line_dataflow_copy1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "Transaction_Full_Load_Folder",
						"type": "LinkedServiceReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "Transaction_Full_Load_Folder",
						"type": "LinkedServiceReference"
					},
					"name": "sink1",
					"rejectedDataLinkedService": {
						"referenceName": "Delta_Full_Load_Folder",
						"type": "LinkedServiceReference"
					}
				}
			],
			"transformations": [
				{
					"name": "select1"
				},
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"parameters{",
				"     container_name as string ('delta-lake'),",
				"     folder_name as string ('Transaction/Full-Load/Sales_Shipment_Line')",
				"}",
				"source(output(",
				"          {Document No_} as string,",
				"          {Line No_} as string,",
				"          Type as string,",
				"          No_ as string,",
				"          {Sell-to Customer No_} as string,",
				"          {Location Code} as string,",
				"          Description as string,",
				"          {Unit of Measure} as string,",
				"          Quantity as string,",
				"          {Unit Price} as string,",
				"          {Unit Cost (LCY)} as string,",
				"          {Shortcut Dimension 1 Code} as string,",
				"          {Shortcut Dimension 2 Code} as string,",
				"          {Quantity (Base)} as string,",
				"          {Item Category Code} as string,",
				"          {Free Supply} as string,",
				"          {Unit Price Incl_ of Tax} as string,",
				"          {GST Group Code} as string,",
				"          {Total GST Amount} as string,",
				"          {HSN_SAC Code} as string,",
				"          {Scheme Reason} as string,",
				"          {Scheme Code} as string,",
				"          {Pack title} as string,",
				"          {Scheme Parent Item No_} as string,",
				"          ECOM as string,",
				"          {Last Modified On} as string,",
				"          {Posting Date} as string,",
				"          Site_Code as string",
				"     ),",
				"     useSchema: false,",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'delimited',",
				"     fileSystem: 'data-lake',",
				"     folderPath: 'Transaction/Full-Load',",
				"     fileName: 'Sales_Shipment_Line_2023-05-10 03:05:33.33.csv',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true,",
				"     multiLineRow: true) ~> source1",
				"source1 select(mapColumn(",
				"          Document_No_ = {Document No_},",
				"          Line_No_ = {Line No_},",
				"          Type,",
				"          No_,",
				"          Sell_to_Customer_No_ = {Sell-to Customer No_},",
				"          Location_Code = {Location Code},",
				"          Description,",
				"          Unit_of_Measure = {Unit of Measure},",
				"          Quantity,",
				"          Unit_Price = {Unit Price},",
				"          Unit_Cost_LCY = {Unit Cost (LCY)},",
				"          Shortcut_Dimension_1_Code = {Shortcut Dimension 1 Code},",
				"          Shortcut_Dimension_2_Code = {Shortcut Dimension 2 Code},",
				"          Quantity_Base = {Quantity (Base)},",
				"          Item_Category_Code = {Item Category Code},",
				"          Free_Supply = {Free Supply},",
				"          Unit_Price_Incl_of_Tax = {Unit Price Incl_ of Tax},",
				"          GST_Group_Code = {GST Group Code},",
				"          Total_GST_Amount = {Total GST Amount},",
				"          HSN_SAC_Code = {HSN_SAC Code},",
				"          Scheme_Reason = {Scheme Reason},",
				"          Scheme_Code = {Scheme Code},",
				"          Pack_title = {Pack title},",
				"          Scheme_Parent_Item_No_ = {Scheme Parent Item No_},",
				"          ECOM,",
				"          Last_Modified_On = {Last Modified On},",
				"          Posting_Date = {Posting Date},",
				"          Site_Code",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 derive(Document_No_ = iifNull(Document_No_, toString(null())),",
				"          Line_No_ = toInteger(Line_No_),",
				"          Type = toInteger(Type),",
				"          No_ = iifNull(No_, toString(null())),",
				"          Sell_to_Customer_No_ = iifNull(Sell_to_Customer_No_, toString(null())),",
				"          Location_Code = iifNull(Location_Code, toString(null())),",
				"          Description = iifNull(Description, toString(null())),",
				"          Unit_of_Measure = iifNull(Unit_of_Measure, toString(null())),",
				"          Quantity = toDouble(Quantity),",
				"          Unit_Price = toDouble(Unit_Price),",
				"          Unit_Cost_LCY = toDouble(Unit_Cost_LCY),",
				"          Shortcut_Dimension_1_Code = iifNull(Shortcut_Dimension_1_Code, toString(null())),",
				"          Shortcut_Dimension_2_Code = iifNull(Shortcut_Dimension_2_Code, toString(null())),",
				"          Quantity_Base = toDouble(Quantity_Base),",
				"          Item_Category_Code = iifNull(Item_Category_Code, toString(null())),",
				"          Free_Supply = iif(toBoolean(Free_Supply),1,0),",
				"          Unit_Price_Incl_of_Tax = toDouble(Unit_Price_Incl_of_Tax),",
				"          GST_Group_Code = iifNull(GST_Group_Code, toString(null())),",
				"          Total_GST_Amount = toDouble(Total_GST_Amount),",
				"          HSN_SAC_Code = iifNull(HSN_SAC_Code,toString(null())),",
				"          Scheme_Reason = iifNull(Scheme_Reason, toString(null())),",
				"          Scheme_Code = iifNull(Scheme_Code, toString(null())),",
				"          Pack_title = iifNull(Pack_title, toString(null())),",
				"          Scheme_Parent_Item_No_ = iifNull(Scheme_Parent_Item_No_, toString(null())),",
				"          ECOM = toInteger(ECOM),",
				"          Last_Modified_On = toTimestamp(toString(toTimestamp(Last_Modified_On,'yyyy-MM-dd HH:mm:ss','yyyy-MM-dd hh:mm:ss.SSS'),'yyyy-MM-dd hh:mm:ss.SSS')),",
				"          Posting_Date = toTimestamp(toString(toTimestamp(Posting_Date,'yyyy-MM-dd HH:mm:ss','yyyy-MM-dd hh:mm:ss.SSS'),'yyyy-MM-dd hh:mm:ss.SSS')),",
				"          Site_Code = toInteger(Site_Code)) ~> derivedColumn1",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'delta',",
				"     fileSystem: ($container_name),",
				"     folderPath: ($folder_name),",
				"     mergeSchema: false,",
				"     autoCompact: false,",
				"     optimizedWrite: false,",
				"     vacuum: 0,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1"
			]
		}
	}
}
{
	"name": "ParquetRead",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DelimitedText20",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "Parquet6",
						"type": "DatasetReference"
					},
					"name": "source2"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "AzureDataLakeStorage1",
						"type": "LinkedServiceReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "derivedColumn1"
				},
				{
					"name": "derivedColumn2"
				},
				{
					"name": "join1"
				},
				{
					"name": "derivedColumn3"
				},
				{
					"name": "select1"
				}
			],
			"scriptLines": [
				"parameters{",
				"     ColumnName as string ( \"['Code','Name','Address','Address 2','City','Phone No_','Phone No_ 2','Post Code','County','E-Mail','Country_Region Code','Use As In-Transit','Require Put-away','Require Pick','Use Cross-Docking','Require Receive','Require Shipment','State Code', 'Subcontracting Location','Subcontractor No_','Depot']\")",
				"}",
				"source(output(",
				"          Table_Name as string,",
				"          Columns as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source(output(",
				"          Loc_Key as string,",
				"          Location_Code as string,",
				"          Location_Name as string,",
				"          Address as string,",
				"          Address_2 as string,",
				"          City as string,",
				"          Phone_No as string,",
				"          Phone_No_2 as string,",
				"          Post_Code as string,",
				"          County as string,",
				"          E_Mail as string,",
				"          Country_Region_Code as string,",
				"          Use_As_In_Transit as integer,",
				"          Require_Put_away as integer,",
				"          Require_Pick as integer,",
				"          Use_Cross_Docking as integer,",
				"          Require_Receive as integer,",
				"          Require_Shipment as integer,",
				"          State_Code as string,",
				"          Subcontracting_Location as integer,",
				"          Subcontractor_No as string,",
				"          Depot as integer,",
				"          Site_Code as integer,",
				"          site_code as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> source2",
				"source1 derive(Columns = split(replace(replace(replace(replace(replace(replace(Columns, \" \", \"\"),\"(\",\"\"),\")\",\"\"),\"-\",\"\"),\"[\",\"\"),\"]\",\"\"),',')[4]) ~> derivedColumn1",
				"source2 derive(Table_Name = \"Location\") ~> derivedColumn2",
				"derivedColumn2, derivedColumn1 join(derivedColumn2@Table_Name == source1@Table_Name,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1 derive(NewColumns = split(replace(replace(replace(replace(replace(replace($ColumnName, \" \", \"\"),\"(\",\"\"),\")\",\"\"),\"-\",\"\"),\"[\",\"\"),\"]\",\"\"),',')) ~> derivedColumn3",
				"derivedColumn3 select(mapColumn(",
				"          Loc_Key,",
				"          Location_Code,",
				"          Location_Name,",
				"          Address,",
				"          Address_2,",
				"          City,",
				"          Phone_No,",
				"          Phone_No_2,",
				"          Post_Code,",
				"          County,",
				"          E_Mail,",
				"          Country_Region_Code,",
				"          Use_As_In_Transit,",
				"          Require_Put_away,",
				"          Require_Pick,",
				"          Use_Cross_Docking,",
				"          Require_Receive,",
				"          Require_Shipment,",
				"          State_Code,",
				"          Subcontracting_Location,",
				"          Subcontractor_No,",
				"          Depot,",
				"          Site_Code = source2@Site_Code,",
				"          site_code = source2@site_code,",
				"          Table_Name = derivedColumn2@Table_Name,",
				"          Table_Name = source1@Table_Name,",
				"          Columns,",
				"          NewColumns",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'delta',",
				"     mergeSchema: false,",
				"     autoCompact: false,",
				"     optimizedWrite: false,",
				"     vacuum: 0,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1"
			]
		}
	}
}
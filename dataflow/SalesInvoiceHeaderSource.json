{
	"name": "SalesInvoiceHeaderSource",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Sales_Invoice_Header",
						"type": "DatasetReference"
					},
					"name": "SalesInvoiceHeaderSource"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "curated_data",
						"type": "LinkedServiceReference"
					},
					"name": "SalesInvoiceLine"
				}
			],
			"transformations": [
				{
					"name": "DataCleaning"
				}
			],
			"scriptLines": [
				"parameters{",
				"     Container_Name as string ('curated-data'),",
				"     Folder_Name as string ('Sales Invoice Header')",
				"}",
				"source(output(",
				"          InvoiceNo as string,",
				"          Excise_InvoiceNo as string,",
				"          Customer_No as string,",
				"          Posted_CustomerCategory as string,",
				"          {Order Date} as string,",
				"          {Posting Date} as string,",
				"          DACommSalesPerson as string,",
				"          {Route Code} as string,",
				"          {Shortcut Dimension 1 Code} as string,",
				"          {Shortcut Dimension 2 Code} as string,",
				"          {Order No_} as string,",
				"          {Vehicle Type} as string,",
				"          {Ship-to Address} as string,",
				"          {Ship-to Address 2} as string,",
				"          {Ship-to City} as string,",
				"          {Ship-to Code} as string,",
				"          {Ship-to Name} as string,",
				"          {Customer Group Code} as string,",
				"          {Last Modified On} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> SalesInvoiceHeaderSource",
				"SalesInvoiceHeaderSource derive(InvoiceNo = iifNull(InvoiceNo, toString(null())),",
				"          Excise_InvoiceNo = iifNull(Excise_InvoiceNo, toString(null())),",
				"          Customer_No = iifNull(Customer_No, toString(null())),",
				"          Posted_CustomerCategory = iifNull(Posted_CustomerCategory, toString(null())),",
				"          {Order Date} = toTimestamp({Order Date},'dd/MM/yyyy hh:mm:ss a','UTC','yyyy-MM-dd hh:mm:ss a'),",
				"          {Posting Date} = toTimestamp({Posting Date},'dd/MM/yyyy hh:mm:ss a','UTC','yyyy-MM-dd hh:mm:ss a'),",
				"          DACommSalesPerson = iifNull(DACommSalesPerson, toString(null())),",
				"          {Route Code} = iifNull({Route Code}, toString(null())),",
				"          {Shortcut Dimension 1 Code} = iifNull({Shortcut Dimension 1 Code}, toString(null())),",
				"          {Shortcut Dimension 2 Code} = iifNull({Shortcut Dimension 2 Code}, toString(null())),",
				"          {Order No_} = iifNull({Order No_}, toString(null())),",
				"          {Vehicle Type} = iifNull({Vehicle Type}, toString(null())),",
				"          {Ship-to Address} = iifNull({Ship-to Address}, toString(null())),",
				"          {Ship-to Address 2} = iifNull({Ship-to Address 2}, toString(null())),",
				"          {Ship-to City} = iifNull({Ship-to City}, toString(null())),",
				"          {Ship-to Code} = iifNull({Ship-to Code}, toString(null())),",
				"          {Ship-to Name} = iifNull({Ship-to Name}, toString(null())),",
				"          {Customer Group Code} = iifNull({Customer Group Code}, toString(null())),",
				"          {Last Modified On} = toTimestamp({Last Modified On},'dd/MM/yyyy hh:mm:ss a','UTC','yyyy-MM-dd hh:mm:ss a')) ~> DataCleaning",
				"DataCleaning sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'delta',",
				"     fileSystem: ($Container_Name),",
				"     folderPath: ($Folder_Name),",
				"     mergeSchema: false,",
				"     autoCompact: false,",
				"     optimizedWrite: false,",
				"     vacuum: 0,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SalesInvoiceLine"
			]
		}
	}
}
{
	"name": "Stage2_Sales_Person_Master_DF",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "Transaction_Full_Load_Folder",
						"type": "LinkedServiceReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "Delta_Full_Load_Folder",
						"type": "LinkedServiceReference"
					},
					"name": "sink1",
					"rejectedDataLinkedService": {
						"referenceName": "Delta_Full_Load_Folder",
						"type": "LinkedServiceReference"
					}
				}
			],
			"transformations": [
				{
					"name": "select1"
				},
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"parameters{",
				"     container_name as string ('delta-lake'),",
				"     folder_name as string ('Master/Sales_Person_Master'),",
				"     Table as string ('temp')",
				"}",
				"source(output(",
				"          Code as string,",
				"          Name as string,",
				"          A_S_M_ as boolean,",
				"          Agent as boolean,",
				"          ARM as boolean,",
				"          {Location Code} as string,",
				"          Route as string,",
				"          {Sales hierarchy code} as string,",
				"          {Global Dimension 1 Code} as string,",
				"          Zone as string,",
				"          Site_Code as short,",
				"          {Sales Executive Name} as string,",
				"          {Sales Manager Name} as string,",
				"          {Area Sales Manager Name} as string,",
				"          {Branch Sales Head Name} as string,",
				"          {Regional Sales Head Name} as string,",
				"          {Area Code} as string,",
				"          {Area Name} as string,",
				"          {Branch Code} as string,",
				"          {Branch Name} as string,",
				"          {Territory Code} as string,",
				"          {Territory Name} as string,",
				"          {Region Code} as string,",
				"          {Region Name} as string,",
				"          {Zone Code} as string,",
				"          {Zone Name} as string,",
				"          {National Code} as string,",
				"          {National Name} as string,",
				"          {Division Name} as string",
				"     ),",
				"     useSchema: false,",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'delimited',",
				"     fileSystem: 'data-lake',",
				"     folderPath: 'Master',",
				"     fileName: 'Salesperson.csv',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true) ~> source1",
				"source1 select(mapColumn(",
				"          Sales_Person_Code = Code,",
				"          Sales_Person_Name = Name,",
				"          ASM_Code = A_S_M_,",
				"          Manager_Code = Agent,",
				"          Executive_Code = ARM,",
				"          SalesPerson_Location = {Location Code},",
				"          SalesPerson_Route = Route,",
				"          Sales_Hierarchy_Code = {Sales hierarchy code},",
				"          BranchCode_SP = {Global Dimension 1 Code},",
				"          SalesPersonZone = Zone,",
				"          Site_Code",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 derive(Code = iifNull(Sales_Person_Code, toString(null())),",
				"          Name = iifNull(Sales_Person_Name, toString(null())),",
				"          A_S_M = iif(ASM_Code,1 ,0),",
				"          Agent = iif(Manager_Code,1 ,0),",
				"          ARM = iif(Executive_Code,1 ,0),",
				"          Location_Code = iifNull(SalesPerson_Location, toString(null())),",
				"          Route = iifNull(SalesPerson_Route, toString(null())),",
				"          Sales_hierarchy_code = iifNull(Sales_Hierarchy_Code, toString(null())),",
				"          Global_Dimension_1_Code = iifNull(BranchCode_SP, toString(null())),",
				"          Zone = iifNull(SalesPersonZone, toString(null())),",
				"          Site_Code = toInteger(iifNull(Site_Code,toString(null())))) ~> derivedColumn1",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'delta',",
				"     fileSystem: ($container_name),",
				"     folderPath: ($folder_name),",
				"     mergeSchema: false,",
				"     autoCompact: false,",
				"     optimizedWrite: false,",
				"     vacuum: 0,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1"
			]
		}
	}
}
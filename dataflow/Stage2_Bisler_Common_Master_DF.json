{
	"name": "Stage2_Bisler_Common_Master_DF",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "Transaction_Full_Load_Folder",
						"type": "LinkedServiceReference"
					},
					"name": "source1"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "select1"
				},
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          A_S_M as string,",
				"          {Account No_} as string,",
				"          Amount as double,",
				"          Area as string,",
				"          {AutoSettlement Route} as boolean,",
				"          {Average _ Best} as double,",
				"          Blocked as boolean,",
				"          {Cap Amount} as double,",
				"          {Cap Scrap Item} as string,",
				"          Category as string,",
				"          Channel as boolean,",
				"          Code as string,",
				"          {Code Type} as boolean,",
				"          {Comman Problem} as boolean,",
				"          Controllable as boolean,",
				"          {Deposit Code} as string,",
				"          {Deposit Type} as boolean,",
				"          Description as string,",
				"          {Discount Value} as double,",
				"          {Down Time Group} as string,",
				"          {Driver No_& Name} as string,",
				"          {Effective Date} as string,",
				"          {End Date} as string,",
				"          {Executive Code} as string,",
				"          {Fat category} as boolean,",
				"          {Fleet No_} as double,",
				"          {From Slab} as boolean,",
				"          Grade as boolean,",
				"          {Item No} as string,",
				"          {Item Weight} as double,",
				"          {Jar Loan Amount} as double,",
				"          {Last Modified} as string,",
				"          {Machine_Mould Type} as boolean,",
				"          {Manager Code} as string,",
				"          {Manual Selection} as boolean,",
				"          {Max Limit} as double,",
				"          {Maximum Value} as double,",
				"          {Metro City} as boolean,",
				"          {Minimum Value} as double,",
				"          {Modified user Id} as string,",
				"          {Own Vehicle} as boolean,",
				"          {Pack Group Code} as string,",
				"          {Pack Group Code 2} as string,",
				"          {PDA Route} as boolean,",
				"          {Plant Maintenace} as boolean,",
				"          {Problem Code} as string,",
				"          PSR as string,",
				"          PSR2 as string,",
				"          PSR3 as string,",
				"          {Reason Code} as string,",
				"          {Reason Type} as boolean,",
				"          {Route category} as boolean,",
				"          {Route Street category} as string,",
				"          {Sales target} as double,",
				"          Sales_Person as string,",
				"          {Scrap Pieces Per Case} as boolean,",
				"          {Shipping Agent Code} as string,",
				"          {Shortage Cap By Cust} as boolean,",
				"          {Spare Required} as boolean,",
				"          {Start Date} as string,",
				"          {Sub Zone} as string,",
				"          Territory as string,",
				"          {To Slab} as boolean,",
				"          {Tonnage Capacity} as double,",
				"          Type as boolean,",
				"          {Unit Of Measure} as string,",
				"          UOM as string,",
				"          {Vehicle Category} as string,",
				"          {Vehicle Type} as boolean,",
				"          {Vehicle Volume} as double,",
				"          Vehicle_Code as string,",
				"          Zone as string,",
				"          {Zone In Charge Code} as string,",
				"          Site_Code as short",
				"     ),",
				"     useSchema: false,",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'delimited',",
				"     fileSystem: 'data-lake',",
				"     folderPath: 'Master',",
				"     fileName: 'Bisleri_Common_Master2023-05-11 12:25:18.18.csv',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true) ~> source1",
				"source1 select(mapColumn(",
				"          A_S_M,",
				"          Account_No_ = {Account No_},",
				"          Amount,",
				"          Area,",
				"          AutoSettlement_Route = {AutoSettlement Route},",
				"          Average_Best = {Average _ Best},",
				"          Blocked,",
				"          Cap_Amount = {Cap Amount},",
				"          Cap_Scrap_Item = {Cap Scrap Item},",
				"          Category,",
				"          Channel,",
				"          Code,",
				"          Code_Type = {Code Type},",
				"          Comman_Problem = {Comman Problem},",
				"          Controllable,",
				"          Deposit_Code = {Deposit Code},",
				"          Deposit_Type = {Deposit Type},",
				"          Description,",
				"          Discount_Value = {Discount Value},",
				"          Down_Time_Group = {Down Time Group},",
				"          {Driver_No_&_Name} = {Driver No_& Name},",
				"          Effective_Date = {Effective Date},",
				"          End_Date = {End Date},",
				"          Executive_Code = {Executive Code},",
				"          Fat_category = {Fat category},",
				"          Fleet_No_ = {Fleet No_},",
				"          From_Slab = {From Slab},",
				"          Grade,",
				"          Item_No = {Item No},",
				"          Item_Weight = {Item Weight},",
				"          Jar_Loan_Amount = {Jar Loan Amount},",
				"          Last_Modified = {Last Modified},",
				"          Machine_Mould_Type = {Machine_Mould Type},",
				"          Manager_Code = {Manager Code},",
				"          Manual_Selection = {Manual Selection},",
				"          Max_Limit = {Max Limit},",
				"          Maximum_Value = {Maximum Value},",
				"          Metro_City = {Metro City},",
				"          Minimum_Value = {Minimum Value},",
				"          Modified_user_Id = {Modified user Id},",
				"          Own_Vehicle = {Own Vehicle},",
				"          Pack_Group_Code = {Pack Group Code},",
				"          Pack_Group_Code_2 = {Pack Group Code 2},",
				"          PDA_Route = {PDA Route},",
				"          Plant_Maintenace = {Plant Maintenace},",
				"          Problem_Code = {Problem Code},",
				"          PSR,",
				"          PSR2,",
				"          PSR3,",
				"          Reason_Code = {Reason Code},",
				"          Reason_Type = {Reason Type},",
				"          Route_category = {Route category},",
				"          Route_Street_category = {Route Street category},",
				"          Sales_target = {Sales target},",
				"          Sales_Person,",
				"          Scrap_Pieces_Per_Case = {Scrap Pieces Per Case},",
				"          Shipping_Agent_Code = {Shipping Agent Code},",
				"          Shortage_Cap_By_Cust = {Shortage Cap By Cust},",
				"          Spare_Required = {Spare Required},",
				"          Start_Date = {Start Date},",
				"          Sub_Zone = {Sub Zone},",
				"          Territory,",
				"          To_Slab = {To Slab},",
				"          Tonnage_Capacity = {Tonnage Capacity},",
				"          Type,",
				"          Unit_Of_Measure = {Unit Of Measure},",
				"          UOM,",
				"          Vehicle_Category = {Vehicle Category},",
				"          Vehicle_Type = {Vehicle Type},",
				"          Vehicle_Volume = {Vehicle Volume},",
				"          Vehicle_Code,",
				"          Zone,",
				"          Zone_In_Charge_Code = {Zone In Charge Code},",
				"          Site_Code",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 derive(A_S_M = iifNull(A_S_M, toString(null())),",
				"          Account_No_ = toInteger(iifNull(Account_No_, toString(null()))),",
				"          Amount = toDecimal(Amount),",
				"          Area = iifNull(Area, toString(null())),",
				"          AutoSettlement_Route = toInteger(iifNull(AutoSettlement_Route, toString(null()))),",
				"          Average_Best = toDecimal(iifNull(Average_Best,toString(null()))),",
				"          Blocked = toInteger(iifNull(Blocked, toString(null()))),",
				"          Cap_Amount = toDecimal(iifNull(Cap_Amount,toString(null()))),",
				"          Cap_Scrap_Item = iifNull(Cap_Scrap_Item, toString(null())),",
				"          Category = iifNull(Category, toString(null())),",
				"          Channel = toInteger(iifNull(Channel, toString(null()))),",
				"          Code = iifNull(Code, toString(null())),",
				"          Code_Type = toInteger(iifNull(Code_Type, toString(null()))),",
				"          Comman_Problem = toInteger(iifNull(Comman_Problem, toString(null()))),",
				"          Controllable = toInteger(iifNull(Controllable, toString(null()))),",
				"          Deposit_Code = iifNull(Deposit_Code, toString(null())),",
				"          Deposit_Type = toInteger(iifNull(Deposit_Type, toString(null()))),",
				"          Description = iifNull(Description, toString(null())),",
				"          Discount_Value = toDecimal(iifNull(Discount_Value,toString(null()))),",
				"          Down_Time_Group = iifNull(Down_Time_Group, toString(null())),",
				"          {Driver_No_&_Name} = ERROR_FUNCTION(''),",
				"          Effective_Date = toTimestamp(toString(toTimestamp(Effective_Date,'yyyy-MM-dd HH:mm:ss.SSS','yyyy-MM-dd hh:mm:ss.SSS'),'yyyy-MM-dd hh:mm:ss.SSS')),",
				"          End_Date = toTimestamp(toString(toTimestamp(End_Date,'yyyy-MM-dd HH:mm:ss.SSS','yyyy-MM-dd hh:mm:ss.SSS'),'yyyy-MM-dd hh:mm:ss.SSS')),",
				"          Executive_Code = iifNull(Executive_Code, toString(null())),",
				"          Fat_category = toInteger(iifNull(Fat_category, toString(null()))),",
				"          Fleet_No_ = toDecimal(iifNull(Fleet_No_,toString(null()))),",
				"          From_Slab = toInteger(iifNull(From_Slab, toString(null()))),",
				"          Grade = toInteger(iifNull(Grade, toString(null()))),",
				"          Item_No = iifNull(Item_No, toString(null())),",
				"          Item_Weight = toDecimal(iifNull(Item_Weight,toString(null()))),",
				"          Jar_Loan_Amount = toDecimal(iifNull(Jar_Loan_Amount,toString(null()))),",
				"          Last_Modified = toTimestamp(toString(toTimestamp(Last_Modified,'yyyy-MM-dd HH:mm:ss.SSS','yyyy-MM-dd hh:mm:ss.SSS'),'yyyy-MM-dd hh:mm:ss.SSS')),",
				"          Machine_Mould_Type = toInteger(iifNull(Machine_Mould_Type, toString(null()))),",
				"          Manager_Code = iifNull(Manager_Code, toString(null())),",
				"          Manual_Selection = toInteger(iifNull(Manual_Selection, toString(null()))),",
				"          Max_Limit = toDecimal(iifNull(Max_Limit,toString(null()))),",
				"          Maximum_Value = toDecimal(iifNull(Maximum_Value,toString(null()))),",
				"          Metro_City = toInteger(iifNull(Metro_City, toString(null()))),",
				"          Minimum_Value = toDecimal(iifNull(Minimum_Value,toString(null()))),",
				"          Modified_user_Id = iifNull(Modified_user_Id, toString(null())),",
				"          Own_Vehicle = toInteger(iifNull(Own_Vehicle, toString(null()))),",
				"          Pack_Group_Code = iifNull(Pack_Group_Code, toString(null())),",
				"          Pack_Group_Code_2 = iifNull(Pack_Group_Code_2, toString(null())),",
				"          PDA_Route = toInteger(iifNull(PDA_Route, toString(null()))),",
				"          Plant_Maintenace = toInteger(iifNull(Plant_Maintenace, toString(null()))),",
				"          Problem_Code = iifNull(Problem_Code, toString(null())),",
				"          PSR = iifNull(PSR, toString(null())),",
				"          PSR2 = iifNull(PSR2, toString(null())),",
				"          PSR3 = iifNull(PSR3, toString(null())),",
				"          Reason_Code = iifNull(Reason_Code, toString(null())),",
				"          Reason_Type = toInteger(iifNull(Reason_Type, toString(null()))),",
				"          Route_category = toInteger(iifNull(Route_category, toString(null()))),",
				"          Route_Street_category = iifNull(Route_Street_category, toString(null())),",
				"          Sales_target = toDecimal(iifNull(Sales_target,toString(null()))),",
				"          Sales_Person = iifNull(Sales_Person, toString(null())),",
				"          Scrap_Pieces_Per_Case = toInteger(iifNull(Scrap_Pieces_Per_Case, toString(null()))),",
				"          Shipping_Agent_Code = iifNull(Shipping_Agent_Code, toString(null())),",
				"          Shortage_Cap_By_Cust = toInteger(iifNull(Shortage_Cap_By_Cust, toString(null()))),",
				"          Spare_Required = toInteger(iifNull(Spare_Required, toString(null()))),",
				"          Start_Date = toTimestamp(toString(toTimestamp(Start_Date,'yyyy-MM-dd HH:mm:ss.SSS','yyyy-MM-dd hh:mm:ss.SSS'),'yyyy-MM-dd hh:mm:ss.SSS')),",
				"          Sub_Zone = iifNull(Sub_Zone, toString(null())),",
				"          Territory = iifNull(Territory, toString(null())),",
				"          To_Slab = toInteger(iifNull(To_Slab, toString(null()))),",
				"          Tonnage_Capacity = toDecimal(iifNull(Tonnage_Capacity,toString(null()))),",
				"          Type = toInteger(iifNull(Type, toString(null()))),",
				"          Unit_Of_Measure = iifNull(Unit_Of_Measure, toString(null())),",
				"          UOM = iifNull(UOM, toString(null())),",
				"          Vehicle_Category = iifNull(Vehicle_Category, toString(null())),",
				"          Vehicle_Type = toInteger(iifNull(Vehicle_Type, toString(null()))),",
				"          Vehicle_Volume = toDecimal(iifNull(Tonnage_Capacity,toString(null()))),",
				"          Vehicle_Code = iifNull(Vehicle_Code, toString(null())),",
				"          Zone = iifNull(Zone, toString(null())),",
				"          Zone_In_Charge_Code = iifNull(Zone_In_Charge_Code, toString(null())),",
				"          Site_Code = toInteger(Site_Code,toString(null()))) ~> derivedColumn1"
			]
		}
	}
}
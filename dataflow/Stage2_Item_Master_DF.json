{
	"name": "Stage2_Item_Master_DF",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Stage2_Iteam_Source",
						"type": "DatasetReference"
					},
					"name": "Stage2ItemSource"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "Delta_Full_Load_Folder",
						"type": "LinkedServiceReference"
					},
					"name": "Stage2ItemSink",
					"rejectedDataLinkedService": {
						"referenceName": "Delta_Full_Load_Folder",
						"type": "LinkedServiceReference"
					}
				}
			],
			"transformations": [
				{
					"name": "ColumnRenaming"
				},
				{
					"name": "DataCleaning"
				}
			],
			"scriptLines": [
				"parameters{",
				"     FolderName as string ('Item_Master'),",
				"     Contanier_Name as string ('delta-lake/Master')",
				"}",
				"source(output(",
				"          No_ as string,",
				"          {No_ 2} as string,",
				"          Description as string,",
				"          {Description 2} as string,",
				"          {Base Unit of Measure} as string,",
				"          {Item Category Code} as string,",
				"          {Product Group Code} as string,",
				"          {Selling Price} as string,",
				"          {Pack Size Information} as string,",
				"          {Pack Size} as string,",
				"          {2Way Item} as string,",
				"          {Short Name} as string,",
				"          {Pack Title} as string,",
				"          {Pack Group Code} as string,",
				"          {Jar Deposit} as string,",
				"          {Pcs Per Case} as string,",
				"          {Item Class} as string,",
				"          {FG Category} as string,",
				"          {Packaging Type} as string,",
				"          {Container Type} as string,",
				"          {Sub Brand} as string,",
				"          {SKU Category} as string,",
				"          Site_Code as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Stage2ItemSource",
				"Stage2ItemSource select(mapColumn(",
				"          No_,",
				"          No_2 = {No_ 2},",
				"          Description,",
				"          Description_2 = {Description 2},",
				"          Base_Unit_of_Measure = {Base Unit of Measure},",
				"          Item_Category_Code = {Item Category Code},",
				"          Product_Group_Code = {Product Group Code},",
				"          Selling_Price = {Selling Price},",
				"          Pack_Size_Information = {Pack Size Information},",
				"          Pack_Size = {Pack Size},",
				"          {2Way_Item} = {2Way Item},",
				"          Short_Name = {Short Name},",
				"          Pack_Title = {Pack Title},",
				"          Pack_Group_Code = {Pack Group Code},",
				"          Jar_Deposit = {Jar Deposit},",
				"          Pcs_Per_Case = {Pcs Per Case},",
				"          Item_Class = {Item Class},",
				"          FG_Category = {FG Category},",
				"          Packaging_Type = {Packaging Type},",
				"          Container_Type = {Container Type},",
				"          Sub_Brand = {Sub Brand},",
				"          SKU_Category = {SKU Category},",
				"          Site_Code",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> ColumnRenaming",
				"ColumnRenaming derive(No_ = iifNull(No_, toString(null())),",
				"          No_2 = iifNull(No_2, toString(null())),",
				"          Description = iifNull(Description, toString(null())),",
				"          Description_2 = iifNull(Description_2, toString(null())),",
				"          Base_Unit_of_Measure = iifNull(Base_Unit_of_Measure, toString(null())),",
				"          Item_Category_Code = iifNull(Item_Category_Code, toString(null())),",
				"          Product_Group_Code = iifNull(Product_Group_Code, toString(null())),",
				"          Selling_Price = toDouble((iifNull(Selling_Price, toString(null()))))\r",
				",",
				"          Pack_Size_Information = toInteger(iifNull(Pack_Size_Information, toString(null()))),",
				"          Pack_Size = iifNull(Pack_Size, toString(null())),",
				"          {2Way_Item} = iifNull({2Way_Item}, toString(null())),",
				"          Short_Name = iifNull(Short_Name, toString(null())),",
				"          Pack_Title = iifNull(Pack_Title, toString(null())),",
				"          Pack_Group_Code = iifNull(Pack_Group_Code, toString(null())),",
				"          Jar_Deposit = iifNull(Jar_Deposit, toString(null())),",
				"          Pcs_Per_Case = iifNull(Pcs_Per_Case, toString(null())),",
				"          Item_Class = toInteger((iifNull(Item_Class, toString(null())))),",
				"          FG_Category = toInteger((iifNull(FG_Category, toString(null())))),",
				"          Packaging_Type = toInteger((iifNull(Packaging_Type, toString(null())))),",
				"          Container_Type = iifNull(Container_Type, toString(null())),",
				"          Sub_Brand = iifNull(Sub_Brand, toString(null())),",
				"          SKU_Category = iifNull(SKU_Category, toString(null())),",
				"          Site_Code = iifNull(Site_Code, toString(null()))) ~> DataCleaning",
				"DataCleaning sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'delta',",
				"     fileSystem: ($Contanier_Name),",
				"     folderPath: ($FolderName),",
				"     mergeSchema: false,",
				"     autoCompact: false,",
				"     optimizedWrite: false,",
				"     vacuum: 0,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> Stage2ItemSink"
			]
		}
	}
}
{
	"name": "Stage2_Sales_Invoice_Line_DF",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Sales_Invoice_Line",
						"type": "DatasetReference"
					},
					"name": "SalesInvoiceLineSource"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "curated_data",
						"type": "LinkedServiceReference"
					},
					"name": "SalesInvoiceLineSink"
				}
			],
			"transformations": [
				{
					"name": "select"
				},
				{
					"name": "Cleaning"
				}
			],
			"scriptLines": [
				"source(output(",
				"          InvoiceNo as string,",
				"          {Sell-to Customer No_} as string,",
				"          Amount as string,",
				"          {Tax Amount} as string,",
				"          {Amount To Customer} as string,",
				"          {Document Date} as string,",
				"          {Bill-to Customer No_} as string,",
				"          Type as string,",
				"          No_ as string,",
				"          SLineNo as string,",
				"          {Location Code} as string,",
				"          {Shipment Date} as string,",
				"          Description as string,",
				"          {Description 2} as string,",
				"          {Unit of Measure} as string,",
				"          Quantity as string,",
				"          {Quantity (Base)} as string,",
				"          {Qty_ per Unit of Measure} as string,",
				"          {Discount Structure Code} as string,",
				"          {Fat Catagory} as string,",
				"          {Unit Price} as string,",
				"          {Unit Cost (LCY)} as string,",
				"          {Unit of Measure Code} as string,",
				"          ItemCategry as string,",
				"          {Free Supply} as string,",
				"          {Freight Discount} as string,",
				"          {Discount Structure Amount} as string,",
				"          {Tax Area Code} as string,",
				"          {Conversion Cost} as string,",
				"          {PVC_PPR Cost} as string,",
				"          {Scheme Reason} as string,",
				"          {Charges To Customer} as string,",
				"          {Tax Group Code} as string,",
				"          {Excise Amount} as string,",
				"          {Non-Dispatch Reason} as string,",
				"          {Last Modified On} as string,",
				"          SIL_Key as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> SalesInvoiceLineSource",
				"SalesInvoiceLineSource select(mapColumn(",
				"          Invoice_No = InvoiceNo,",
				"          Sell_to_Customer_No = {Sell-to Customer No_},",
				"          Amount,",
				"          Tax_Amount = {Tax Amount},",
				"          Amount_To_Customer = {Amount To Customer},",
				"          Document_Date = {Document Date},",
				"          Bill_to_Customer_No = {Bill-to Customer No_},",
				"          Type,",
				"          No = No_,",
				"          SLineNo,",
				"          Location_Code = {Location Code},",
				"          Shipment_Date = {Shipment Date},",
				"          Description,",
				"          Description2 = {Description 2},",
				"          Unit_of_Measure = {Unit of Measure},",
				"          Quantity,",
				"          Quantity_Base = {Quantity (Base)},",
				"          Qty_per_Unit_of_Measure = {Qty_ per Unit of Measure},",
				"          Discount_Structure_Code = {Discount Structure Code},",
				"          Fat_Catagory = {Fat Catagory},",
				"          Unit_Price = {Unit Price},",
				"          Unit_Cost_LCY = {Unit Cost (LCY)},",
				"          Unit_of_Measure_Code = {Unit of Measure Code},",
				"          ItemCategry,",
				"          Free_Supply = {Free Supply},",
				"          Freight_Discount = {Freight Discount},",
				"          Discount_Structure_Amount = {Discount Structure Amount},",
				"          Tax_Area_Code = {Tax Area Code},",
				"          Conversion_Cost = {Conversion Cost},",
				"          PVC_PPR_Cost = {PVC_PPR Cost},",
				"          Scheme_Reason = {Scheme Reason},",
				"          Charges_To_Customer = {Charges To Customer},",
				"          Tax_Group_Code = {Tax Group Code},",
				"          Excise_Amount = {Excise Amount},",
				"          Non_Dispatch_Reason = {Non-Dispatch Reason},",
				"          Last_Modified_On = {Last Modified On},",
				"          SIL_Key",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select",
				"select derive(Invoice_No = iifNull(Invoice_No, toString(null())),",
				"          Sell_to_Customer_No = iifNull(Sell_to_Customer_No, toString(null())),",
				"          Amount = toDouble(Amount),",
				"          Tax_Amount = toInteger(Tax_Amount)\r",
				",",
				"          Amount_To_Customer = toDouble(Amount_To_Customer),",
				"          Document_Date = toTimestamp(Document_Date,'dd/MM/yyyy hh:mm:ss a','UTC','yyyy-MM-dd hh:mm:ss a'),",
				"          Bill_to_Customer_No = iifNull(Bill_to_Customer_No, toString(null())),",
				"          Type = toInteger(Type),",
				"          No = iifNull(No, toString(null())),",
				"          SLineNo = toInteger(SLineNo),",
				"          Location_Code = iifNull(Location_Code, toString(null())),",
				"          Shipment_Date = toTimestamp(Shipment_Date,'dd/MM/yyyy hh:mm:ss a','UTC','yyyy-MM-dd hh:mm:ss a'),",
				"          Description = iifNull(Description, toString(null())),",
				"          Description2 = iifNull(Description2,toString(null())),",
				"          Unit_of_Measure = iifNull(Unit_of_Measure,toString(null())),",
				"          Quantity = toDouble(Quantity),",
				"          Quantity_Base = toDouble(Quantity_Base),",
				"          Qty_per_Unit_of_Measure = toDouble(Qty_per_Unit_of_Measure),",
				"          Discount_Structure_Code = iifNull(Discount_Structure_Code,toString(null())),",
				"          Fat_Catagory = toInteger(Fat_Catagory),",
				"          Unit_Price = toDouble(Unit_Price),",
				"          Unit_Cost_LCY = toDouble(Unit_Cost_LCY),",
				"          Unit_of_Measure_Code = iifNull(Unit_of_Measure_Code,toString(null())),",
				"          ItemCategry = iifNull(ItemCategry,toString(null())),",
				"          Free_Supply = toInteger(Free_Supply),",
				"          Freight_Discount = toInteger(Freight_Discount),",
				"          Discount_Structure_Amount = toDouble(Discount_Structure_Amount),",
				"          Tax_Area_Code = iifNull(Tax_Area_Code,toString(null())),",
				"          Conversion_Cost = toInteger(Conversion_Cost),",
				"          PVC_PPR_Cost = toDouble(PVC_PPR_Cost),",
				"          Scheme_Reason = iifNull(Scheme_Reason,toString(null())),",
				"          Charges_To_Customer = toInteger(Charges_To_Customer),",
				"          Tax_Group_Code = iifNull(Tax_Group_Code,toString(null())),",
				"          Non_Dispatch_Reason = iifNull(Non_Dispatch_Reason,toString(null())),",
				"          Excise_Amount = toInteger(Excise_Amount),",
				"          Last_Modified_On = toTimestamp(Last_Modified_On,'dd/MM/yyyy hh:mm:ss a','UTC','yyyy-MM-dd hh:mm:ss a'),",
				"          SIL_Key = iifNull(SIL_Key,toString(null())),",
				"          Site = toString(null())) ~> Cleaning",
				"Cleaning sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'delta',",
				"     fileSystem: 'curated-data',",
				"     folderPath: 'Sales_Invoice/Sales_Invoice_Line',",
				"     mergeSchema: false,",
				"     autoCompact: false,",
				"     optimizedWrite: false,",
				"     vacuum: 0,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SalesInvoiceLineSink"
			]
		}
	}
}
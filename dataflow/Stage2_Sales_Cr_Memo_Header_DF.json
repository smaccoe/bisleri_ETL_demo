{
	"name": "Stage2_Sales_Cr_Memo_Header_DF",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Sales_Cr_Memo_Header",
						"type": "DatasetReference"
					},
					"name": "SalesCrMemoHeader"
				}
			],
			"sinks": [
				{
					"name": "SalesCrMemoHeaderSink"
				}
			],
			"transformations": [
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"parameters{",
				"     Container_Name as string ('curated-data'),",
				"     Folder_Name as string ('Sales Cr_Memo Header')",
				"}",
				"source(output(",
				"          SR_DocNo as string,",
				"          RCustomer_No as string,",
				"          RBranch as string,",
				"          RDivision as string,",
				"          SDACommSalesPerson as string,",
				"          R_Location_Code as string,",
				"          R_External_Doc_No as string,",
				"          RRoutecode as string,",
				"          RPdate as string,",
				"          RCustomer_Posting_Group as string,",
				"          {Last Modified On} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> SalesCrMemoHeader",
				"SalesCrMemoHeader derive(SR_DocNo = iifNull(SR_DocNo, toString(null())),",
				"          RCustomer_No = iifNull(RCustomer_No, toString(null())),",
				"          RBranch = iifNull(RBranch, toString(null())),",
				"          RDivision = iifNull(RDivision, toString(null())),",
				"          SDACommSalesPerson = iifNull(SDACommSalesPerson, toString(null())),",
				"          R_Location_Code = iifNull(R_Location_Code, toString(null())),",
				"          R_External_Doc_No = iifNull(R_External_Doc_No, toString(null())),",
				"          RRoutecode = iifNull(RRoutecode, toString(null())),",
				"          RPdate = toTimestamp({RPdate},'dd/MM/yyyy hh:mm:ss a','UTC','yyyy-MM-dd hh:mm:ss a'),",
				"          RCustomer_Posting_Group = iifNull(RCustomer_Posting_Group, toString(null())),",
				"          {Last Modified On} = toTimestamp({Last Modified On},'dd/MM/yyyy hh:mm:ss a','UTC','yyyy-MM-dd hh:mm:ss a')) ~> derivedColumn1",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SalesCrMemoHeaderSink"
			]
		}
	}
}
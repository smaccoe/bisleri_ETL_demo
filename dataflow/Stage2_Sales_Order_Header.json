{
	"name": "Stage2_Sales_Order_Header",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "SalesOrderHeader",
						"type": "DatasetReference"
					},
					"name": "salesorderheader"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "select1"
				},
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          No_ as string,",
				"          {Document Type} as string,",
				"          {Sell-to Customer No_} as string,",
				"          {Bill-to Customer No_} as string,",
				"          {Ship-to Code} as string,",
				"          {Ship-to Name} as string,",
				"          {Ship-to Name 2} as string,",
				"          {Ship-to Address} as string,",
				"          {Ship-to Address 2} as string,",
				"          {Ship-to City} as string,",
				"          {Ship-to Contact} as string,",
				"          {Order Date} as string,",
				"          {Posting Date} as string,",
				"          {Shipment Date} as string,",
				"          {Shipment Method Code} as string,",
				"          {Location Code} as string,",
				"          {Shortcut Dimension 1 Code} as string,",
				"          {Shortcut Dimension 2 Code} as string,",
				"          {Customer Posting Group} as string,",
				"          {Loading Slip No_} as string,",
				"          {Customer Group Code} as string,",
				"          AutoPDASO as string,",
				"          {Order is Placed} as string,",
				"          {Finance Control} as string,",
				"          Channel as string,",
				"          {Short Close} as string,",
				"          ECOM as string,",
				"          {Mannual Route order} as string,",
				"          Site_Code as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> salesorderheader",
				"salesorderheader select(mapColumn(",
				"          No_,",
				"          Document_Type = {Document Type},",
				"          Sell_to_Customer_No_ = {Sell-to Customer No_},",
				"          Bill_to_Customer_No_ = {Bill-to Customer No_},",
				"          Ship_to_Code = {Ship-to Code},",
				"          Ship_to_Name = {Ship-to Name},",
				"          Ship_to_Name_2 = {Ship-to Name 2},",
				"          Ship_to_Address = {Ship-to Address},",
				"          Ship_to_Address_2 = {Ship-to Address 2},",
				"          Ship_to_City = {Ship-to City},",
				"          Ship_to_Contact = {Ship-to Contact},",
				"          Order_Date = {Order Date},",
				"          Posting_Date = {Posting Date},",
				"          Shipment_Date = {Shipment Date},",
				"          Shipment_Method_Code = {Shipment Method Code},",
				"          Location_Code = {Location Code},",
				"          Shortcut_Dimension_1_Code = {Shortcut Dimension 1 Code},",
				"          Shortcut_Dimension_2_Code = {Shortcut Dimension 2 Code},",
				"          Customer_Posting_Group = {Customer Posting Group},",
				"          Loading_Slip_No_ = {Loading Slip No_},",
				"          Customer_Group_Code = {Customer Group Code},",
				"          AutoPDASO,",
				"          Order_is_Placed = {Order is Placed},",
				"          Finance_Control = {Finance Control},",
				"          Channel,",
				"          Short_Close = {Short Close},",
				"          ECOM,",
				"          Mannual_Route_order = {Mannual Route order},",
				"          Site_Code",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 derive(Document_Type = toInteger(Document_Type),",
				"          Sell_to_Customer_No_ = iifNull(Sell_to_Customer_No_,toString(null())),",
				"          Bill_to_Customer_No_ = iifNull(Bill_to_Customer_No_,toString(null())),",
				"          Ship_to_Code = iifNull(Ship_to_Code, toString(null())),",
				"          Ship_to_Name = iifNull(Ship_to_Name,toString(null())),",
				"          Ship_to_Name_2 = iifNull(Ship_to_Name_2,toString(null())),",
				"          Ship_to_Address = iifNull(Ship_to_Address,toString(null())),",
				"          Ship_to_Address_2 = iifNull(Ship_to_Address_2,toString(null())),",
				"          Ship_to_City = iifNull(Ship_to_City,toString(null())),",
				"          Ship_to_Contact = iifNull(Ship_to_Contact, toString(null())),",
				"          Order_Date = toTimestamp(toString(toTimestamp(Order_Date,'yyyy-MM-dd HH:mm:ss.SSS','yyyy-MM-dd hh:mm:ss.SSS'),'yyyy-MM-dd hh:mm:ss.SSS')),",
				"          Posting_Date = toTimestamp(toString(toTimestamp(Posting_Date,'yyyy-MM-dd HH:mm:ss.SSS','yyyy-MM-dd hh:mm:ss.SSS'),'yyyy-MM-dd hh:mm:ss.SSS')),",
				"          Shipment_Date = toTimestamp(toString(toTimestamp(Shipment_Date,'yyyy-MM-dd HH:mm:ss.SSS','yyyy-MM-dd hh:mm:ss.SSS'),'yyyy-MM-dd hh:mm:ss.SSS')),",
				"          Shipment_Method_Code = iifNull(Shipment_Method_Code,toString(null())),",
				"          Location_Code = iifNull(Location_Code,toString(null())),",
				"          Shortcut_Dimension_1_Code = iifNull(Shortcut_Dimension_1_Code,toString(null())),",
				"          Shortcut_Dimension_2_Code = iifNull(Shortcut_Dimension_2_Code,toString(null())),",
				"          Customer_Posting_Group = iifNull(Customer_Posting_Group,toString(null())),",
				"          Loading_Slip_No_ = iifNull(Loading_Slip_No_,toString(null())),",
				"          Customer_Group_Code = iifNull(Customer_Group_Code,toString(null())),",
				"          AutoPDASO = toInteger(AutoPDASO),",
				"          Order_is_Placed = toInteger(Order_is_Placed),",
				"          Finance_Control = toInteger(Finance_Control)) ~> derivedColumn1"
			]
		}
	}
}